server.port=8083
# PostgreSQL Database Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/fitness_user_db
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Properties (Optional, if using JPA/Hibernate)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.kafka.consumer.bootstrap-servers=localhost:9092
kafka.topic.name=AI-Service-Topic
spring.kafka.consumer.group-id=group_id_1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.fitnessapp.aiservice.dto.AIServiceRequestDto

gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=
gemini.api.key=AIzaSyBsUdFFutsPVuxO8qnFNzXTjaYn7eywEGA
